{"title":"CVE-2019-0808","slug":"CVE-2019-0808","date":"2020-07-14","updated":"2020-09-10","comments":true,"path":"api/posts/37051.json","excerpt":null,"cover":null,"covers":null,"content":"<p>Chrome 基于多进程架构，主要包括浏览器进程和渲染进程，进程间通过 IPC 通信（Mojo），其中渲染进程运行着不可信的 HTML 和 JS 代码。浏览器中的每一个 tab 为一个独立的进程，运行在 Untruster 的低权限等级，并通过沙箱引擎隔离。因此像 CVE-2019-5768 这样的渲染进程中的远程代码执行漏洞仍需要结合其他高权限漏洞实现沙箱逃逸。</p>\n<ul>\n<li> 利用浏览器进程的漏洞，比如 IndexedDB,Mojo 等 </li>\n<li> 利用操作系统内核漏洞，比如与 CVE-2019-5768 组合的 win32k.sys 内核提权漏洞 CVE-2019-0808</li>\n</ul>\n<h2 id=\"漏洞原理分析\"><a href=\"# 漏洞原理分析\" class=\"headerlink\" title=\"漏洞原理分析\"></a> 漏洞原理分析 </h2><p>CVE-2019-0808 是 win32k.sys 中的一个空指针解引用漏洞，根据 360Blog, 漏洞存在于 win32k!xxxMNMouseMove 函数中：</p>\n<p> 首先分析 xxxMNMouseMove 函数：</p>\n","url":"/posts/37051/","min2read":"1","word4post":215,"prev_post":{"title":"Chrome 调试篇 1 CVE-2019-5768","url":"/posts/7456/"},"next_post":{"title":"CVE-2019-0708","url":"/posts/37771/"},"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"漏洞原理分析\" href = \"#\"><span class=\"toc-number\">1.</span> <span class=\"toc-text\"> 漏洞原理分析 </span></a></li></ol>","categories":[],"tags":[{"name":"chrome_bug","path":"api/tags/chrome_bug.json","url":"/tags/chrome-bug/"}]}