{"title":"UAF 漏洞简单学习","slug":"UAF漏洞简单学习","date":"2020-05-25","updated":"2020-05-25","comments":true,"path":"api/posts/24311.json","excerpt":null,"cover":null,"covers":null,"content":"<p>UAF 漏洞是一种内存破坏漏洞，通常存在于浏览器中。</p>\n<h2 id=\"产生原因\"><a href=\"# 产生原因\" class=\"headerlink\" title=\"产生原因\"></a>产生原因 </h2><p>uaf 漏洞成因：一块堆内存被释放之后又被使用。<br> 再一次被使用是指：指针存在（悬垂指针被引用）引用结果不可预测。</p>\n<p>由于大多数堆内存都是 C++ 对象，所以利用的核心思路即：分配堆去占坑，占的坑中又自己构造的虚表。</p>\n<h2 id=\"分析方式\"><a href=\"# 分析方式\" class=\"headerlink\" title=\"分析方式\"></a>分析方式 </h2><p> 分析 uaf 漏洞的要点在于弄清楚对象是在哪里被分配，被释放，被重用。</p>\n<p>uaf 异常触发点：对已释放的对象进行操作导致的异常，所以异常点即重用点。</p>\n<p>而由于是对对象的操作，可以列出这个对象的所有方法，找出分配和释放的方法，对其下断来分析 uaf 过程。</p>\n<blockquote>\n<p>1. 悬垂指针：指一类不指向任何合法的或者有效的（即与指针的含义不符）的对象的指针，比如一个对象的指针，如果这个对象已经被释放或者回收，但是指针没有进行任何的修改，仍然执行已被释放的内存，这个指针就叫做悬垂指针。</p>\n<p>2.UAF 漏洞：Use-AFTER-Free 是一种内存破坏漏洞，简单来说，漏洞的原因是使用了悬垂指针。</p>\n</blockquote>\n<p>常见与 UAF 漏洞配合使用的是堆喷射，分配大量内存，增大靶子的面积，使 eip 跳进分配的内存中，而分配的内存中又充满了滑板指令，只要命中了滑板指令就可以命中 shellcode</p>\n<h2 id=\"调试方式\"><a href=\"# 调试方式\" class=\"headerlink\" title=\"调试方式\"></a>调试方式 </h2><p> 对于 uaf 漏洞，调试器捕获到的异常并不是漏洞发生的第一现场，所以一般要使用 gflags 开启 PageHeap 和 UST（windbg 自带 gflags 工具）</p>\n<p><code>gflags.exe /i 程序名.exe +hpa +ust</code></p>\n<p>这样调试器会定位到最先出错的位置。</p>\n<blockquote>\n<p>技巧：<br>1. 在 ida 中查找函数后，在 windbg 下断<br>2. 打开 poc 文件后出现 crash 就是对象被重用，根据 crash 地址来找到重用的对象起始地址<br>3. 对对象起始使用 <code>!heap -p -a 地址</code> 可获得这个对象的分配信息，由回溯还可以知道是什么函数分配的。<br>4. 对分配函数下断到达分配现场<br>5. 在回溯中，分配函数一般为 RtlAllocateHeap 的上层，而释放函数一般就是 FreeHeap 的上层。</p>\n</blockquote>\n","url":"/posts/24311/","min2read":2,"word4post":621,"prev_post":{"title":"初识 Meterpreter","url":"/posts/53615/"},"next_post":{"title":"CVE-2019-5786","url":"/posts/23309/"},"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"产生原因\" href = \"#\"><span class=\"toc-number\">1.</span> <span class=\"toc-text\">产生原因 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"分析方式\" href = \"#\"><span class=\"toc-number\">2.</span> <span class=\"toc-text\">分析方式 </span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" data-id=\"调试方式\" href = \"#\"><span class=\"toc-number\">3.</span> <span class=\"toc-text\">调试方式 </span></a></li></ol>","categories":[],"tags":[{"name":"chrome","path":"api/tags/chrome.json","url":"/tags/chrome/"}]}